;
; File generated by cc65 v 2.18 - Ubuntu 2.18-1
;
	.fopt		compiler,"cc65 v 2.18 - Ubuntu 2.18-1"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_pal_bg
	.import		_ppu_wait_nmi
	.import		_ppu_off
	.import		_ppu_on_all
	.import		_pad_poll
	.import		_scroll
	.import		_bank_bg
	.import		_vram_adr
	.import		_vram_put
	.export		_i
	.export		_address
	.export		_pad
	.export		_scroll_x
	.export		_scroll_y
	.export		_palette
	.export		_nametable
	.export		_attributes
	.export		_fill_in_ppu_ram
	.export		_fill_in_attributes
	.export		_game_loop
	.export		_main

.segment	"DATA"

_scroll_x:
	.word	$0000
_scroll_y:
	.word	$0000

.segment	"RODATA"

_palette:
	.byte	$22
	.byte	$29
	.byte	$1A
	.byte	$0F
	.byte	$22
	.byte	$36
	.byte	$17
	.byte	$0F
	.byte	$22
	.byte	$30
	.byte	$21
	.byte	$0F
	.byte	$22
	.byte	$27
	.byte	$17
	.byte	$0F
	.byte	$22
	.byte	$16
	.byte	$27
	.byte	$18
	.byte	$22
	.byte	$1A
	.byte	$30
	.byte	$27
	.byte	$22
	.byte	$16
	.byte	$30
	.byte	$27
	.byte	$22
	.byte	$0F
	.byte	$36
	.byte	$17
_nametable:
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$D0
	.byte	$E8
	.byte	$D1
	.byte	$D0
	.byte	$D1
	.byte	$DE
	.byte	$D1
	.byte	$D8
	.byte	$D0
	.byte	$D1
	.byte	$26
	.byte	$29
	.byte	$29
	.byte	$DE
	.byte	$D1
	.byte	$D0
	.byte	$D1
	.byte	$D0
	.byte	$D1
	.byte	$26
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$DB
	.byte	$42
	.byte	$42
	.byte	$DB
	.byte	$42
	.byte	$DB
	.byte	$42
	.byte	$DB
	.byte	$DB
	.byte	$42
	.byte	$26
	.byte	$29
	.byte	$29
	.byte	$DB
	.byte	$42
	.byte	$DB
	.byte	$42
	.byte	$DB
	.byte	$42
	.byte	$26
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$DB
	.byte	$DB
	.byte	$DB
	.byte	$DB
	.byte	$DB
	.byte	$DE
	.byte	$DF
	.byte	$DB
	.byte	$DB
	.byte	$DB
	.byte	$26
	.byte	$29
	.byte	$29
	.byte	$DE
	.byte	$DF
	.byte	$DB
	.byte	$DB
	.byte	$E4
	.byte	$E5
	.byte	$26
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$DB
	.byte	$DB
	.byte	$DB
	.byte	$DE
	.byte	$43
	.byte	$DB
	.byte	$42
	.byte	$DB
	.byte	$DB
	.byte	$DB
	.byte	$26
	.byte	$29
	.byte	$29
	.byte	$DB
	.byte	$42
	.byte	$DB
	.byte	$DB
	.byte	$E6
	.byte	$E3
	.byte	$26
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$DB
	.byte	$DB
	.byte	$DB
	.byte	$DB
	.byte	$42
	.byte	$DB
	.byte	$DB
	.byte	$DB
	.byte	$D4
	.byte	$D9
	.byte	$26
	.byte	$29
	.byte	$29
	.byte	$DB
	.byte	$DB
	.byte	$D4
	.byte	$D9
	.byte	$D4
	.byte	$D9
	.byte	$E7
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$95
	.byte	$95
	.byte	$95
	.byte	$95
	.byte	$95
	.byte	$95
	.byte	$95
	.byte	$95
	.byte	$97
	.byte	$98
	.byte	$78
	.byte	$78
	.byte	$78
	.byte	$95
	.byte	$95
	.byte	$97
	.byte	$98
	.byte	$97
	.byte	$98
	.byte	$95
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$D0
	.byte	$E8
	.byte	$D1
	.byte	$D0
	.byte	$D1
	.byte	$DE
	.byte	$D1
	.byte	$D8
	.byte	$D0
	.byte	$D1
	.byte	$26
	.byte	$29
	.byte	$29
	.byte	$DE
	.byte	$D1
	.byte	$D0
	.byte	$D1
	.byte	$D0
	.byte	$D1
	.byte	$26
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$DB
	.byte	$42
	.byte	$42
	.byte	$DB
	.byte	$42
	.byte	$DB
	.byte	$42
	.byte	$DB
	.byte	$DB
	.byte	$42
	.byte	$26
	.byte	$29
	.byte	$29
	.byte	$DB
	.byte	$42
	.byte	$DB
	.byte	$42
	.byte	$DB
	.byte	$42
	.byte	$26
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$DB
	.byte	$DB
	.byte	$DB
	.byte	$DB
	.byte	$DB
	.byte	$DE
	.byte	$DF
	.byte	$DB
	.byte	$DB
	.byte	$DB
	.byte	$26
	.byte	$29
	.byte	$29
	.byte	$DE
	.byte	$DF
	.byte	$DB
	.byte	$DB
	.byte	$E4
	.byte	$E5
	.byte	$26
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$DB
	.byte	$DB
	.byte	$DB
	.byte	$DE
	.byte	$43
	.byte	$DB
	.byte	$42
	.byte	$DB
	.byte	$DB
	.byte	$DB
	.byte	$26
	.byte	$29
	.byte	$29
	.byte	$DB
	.byte	$42
	.byte	$DB
	.byte	$DB
	.byte	$E6
	.byte	$E3
	.byte	$26
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$DB
	.byte	$DB
	.byte	$DB
	.byte	$DB
	.byte	$42
	.byte	$DB
	.byte	$DB
	.byte	$DB
	.byte	$D4
	.byte	$D9
	.byte	$26
	.byte	$29
	.byte	$29
	.byte	$DB
	.byte	$DB
	.byte	$D4
	.byte	$D9
	.byte	$D4
	.byte	$D9
	.byte	$E7
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$95
	.byte	$95
	.byte	$95
	.byte	$95
	.byte	$95
	.byte	$95
	.byte	$95
	.byte	$95
	.byte	$97
	.byte	$98
	.byte	$78
	.byte	$78
	.byte	$78
	.byte	$95
	.byte	$95
	.byte	$97
	.byte	$98
	.byte	$97
	.byte	$98
	.byte	$95
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$1B
	.byte	$18
	.byte	$18
	.byte	$1D
	.byte	$24
	.byte	$25
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$A5
	.byte	$A6
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$A5
	.byte	$A6
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$53
	.byte	$54
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$A7
	.byte	$A8
	.byte	$24
	.byte	$45
	.byte	$45
	.byte	$24
	.byte	$24
	.byte	$45
	.byte	$45
	.byte	$45
	.byte	$45
	.byte	$53
	.byte	$54
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$A7
	.byte	$A8
	.byte	$47
	.byte	$47
	.byte	$24
	.byte	$24
	.byte	$47
	.byte	$47
	.byte	$47
	.byte	$47
	.byte	$55
	.byte	$56
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$55
	.byte	$56
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$A5
	.byte	$A6
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$A5
	.byte	$A6
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$53
	.byte	$54
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$A7
	.byte	$A8
	.byte	$24
	.byte	$45
	.byte	$45
	.byte	$24
	.byte	$24
	.byte	$45
	.byte	$45
	.byte	$45
	.byte	$45
	.byte	$53
	.byte	$54
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$A7
	.byte	$A8
	.byte	$47
	.byte	$47
	.byte	$24
	.byte	$24
	.byte	$47
	.byte	$47
	.byte	$47
	.byte	$47
	.byte	$55
	.byte	$56
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$55
	.byte	$56
	.byte	$24
	.byte	$24
_attributes:
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$AA
	.byte	$AA
	.byte	$AA
	.byte	$BF
	.byte	$FF
	.byte	$AA
	.byte	$FF
	.byte	$AA
	.byte	$55
	.byte	$AA
	.byte	$55
	.byte	$EF
	.byte	$FF
	.byte	$55
	.byte	$FF
	.byte	$55
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00

.segment	"BSS"

.segment	"ZEROPAGE"
_i:
	.res	2,$00
_address:
	.res	2,$00
_pad:
	.res	1,$00

; ---------------------------------------------------------------
; void __near__ fill_in_ppu_ram (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_fill_in_ppu_ram: near

.segment	"CODE"

;
; vram_adr(NTADR_A(0, 0));
;
	ldx     #$20
	lda     #$00
	jsr     _vram_adr
;
; for (i = 0; i < 32 * 24; i++) {
;
	lda     #$00
	sta     _i
	sta     _i+1
L036E:	lda     _i
	cmp     #$00
	lda     _i+1
	sbc     #$03
	bvc     L0375
	eor     #$80
L0375:	asl     a
	lda     #$00
	bcc     L03CA
;
; vram_put(nametable[i]);
;
	lda     #<(_nametable)
	sta     ptr1
	lda     #>(_nametable)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	jsr     _vram_put
;
; for (i = 0; i < 32 * 24; i++) {
;
	lda     _i
	ldx     _i+1
	clc
	adc     #$01
	bcc     L0377
	inx
L0377:	sta     _i
	stx     _i+1
	jmp     L036E
;
; for (i = 0; i < 32 * 6; i++) {
;
L03CA:	sta     _i
	sta     _i+1
L037B:	lda     _i
	cmp     #$C0
	lda     _i+1
	sbc     #$00
	bvc     L0382
	eor     #$80
L0382:	asl     a
	lda     #$00
	bcc     L03CC
;
; vram_put(0x24);
;
	lda     #$24
	jsr     _vram_put
;
; for (i = 0; i < 32 * 6; i++) {
;
	lda     _i
	ldx     _i+1
	clc
	adc     #$01
	bcc     L0384
	inx
L0384:	sta     _i
	stx     _i+1
	jmp     L037B
;
; for (i = 0; i < 32 * 24; i++) {
;
L03CC:	sta     _i
	sta     _i+1
L0387:	lda     _i
	cmp     #$00
	lda     _i+1
	sbc     #$03
	bvc     L038E
	eor     #$80
L038E:	bpl     L0388
;
; vram_put(i);
;
	lda     _i
	jsr     _vram_put
;
; for (i = 0; i < 32 * 24; i++) {
;
	lda     _i
	ldx     _i+1
	clc
	adc     #$01
	bcc     L0390
	inx
L0390:	sta     _i
	stx     _i+1
	jmp     L0387
;
; }
;
L0388:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ fill_in_attributes (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_fill_in_attributes: near

.segment	"CODE"

;
; vram_adr(ATTRIBUTE_TABLE);
;
	ldx     #$23
	lda     #$C0
	jsr     _vram_adr
;
; for (i = 0; i < 8 * 8; i++) {
;
	lda     #$00
	sta     _i
	sta     _i+1
L0396:	lda     _i
	cmp     #$40
	lda     _i+1
	sbc     #$00
	bvc     L039D
	eor     #$80
L039D:	bpl     L0397
;
; vram_put(attributes[i]);
;
	lda     #<(_attributes)
	sta     ptr1
	lda     #>(_attributes)
	clc
	adc     _i+1
	sta     ptr1+1
	ldy     _i
	lda     (ptr1),y
	jsr     _vram_put
;
; for (i = 0; i < 8 * 8; i++) {
;
	lda     _i
	ldx     _i+1
	clc
	adc     #$01
	bcc     L039F
	inx
L039F:	sta     _i
	stx     _i+1
	jmp     L0396
;
; }
;
L0397:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ game_loop (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_game_loop: near

.segment	"CODE"

;
; ppu_wait_nmi();
;
L03A4:	jsr     _ppu_wait_nmi
;
; pad = pad_poll(0);
;
	lda     #$00
	jsr     _pad_poll
	sta     _pad
;
; if (pad & PAD_LEFT) {
;
	and     #$02
	beq     L03CD
;
; scroll_x--;
;
	lda     _scroll_x
	ldx     _scroll_x+1
	sec
	sbc     #$01
	bcs     L03AF
	dex
L03AF:	sta     _scroll_x
	stx     _scroll_x+1
;
; if (pad & PAD_RIGHT) {
;
L03CD:	lda     _pad
	and     #$01
	beq     L03CE
;
; scroll_x++;
;
	lda     _scroll_x
	ldx     _scroll_x+1
	clc
	adc     #$01
	bcc     L03B3
	inx
L03B3:	sta     _scroll_x
	stx     _scroll_x+1
;
; if (pad & PAD_UP) {
;
L03CE:	lda     _pad
	and     #$08
	beq     L03CF
;
; scroll_y--;
;
	lda     _scroll_y
	ldx     _scroll_y+1
	sec
	sbc     #$01
	bcs     L03B7
	dex
L03B7:	sta     _scroll_y
	stx     _scroll_y+1
;
; if (pad & PAD_DOWN) {
;
L03CF:	lda     _pad
	and     #$04
	beq     L03B8
;
; scroll_y++;
;
	lda     _scroll_y
	ldx     _scroll_y+1
	clc
	adc     #$01
	bcc     L03BB
	inx
L03BB:	sta     _scroll_y
	stx     _scroll_y+1
;
; scroll(scroll_x, scroll_y);
;
L03B8:	lda     _scroll_x
	ldx     _scroll_x+1
	jsr     pushax
	lda     _scroll_y
	ldx     _scroll_y+1
	jsr     _scroll
;
; while (1) {
;
	jmp     L03A4

.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

;
; ppu_off();
;
	jsr     _ppu_off
;
; pal_bg(palette);
;
	lda     #<(_palette)
	ldx     #>(_palette)
	jsr     _pal_bg
;
; bank_bg(1);
;
	lda     #$01
	jsr     _bank_bg
;
; fill_in_ppu_ram();
;
	jsr     _fill_in_ppu_ram
;
; fill_in_attributes();
;
	jsr     _fill_in_attributes
;
; ppu_on_all();
;
	jsr     _ppu_on_all
;
; game_loop();
;
	jmp     _game_loop

.endproc

