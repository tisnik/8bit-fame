SCREEN_ADR	EQU 4000
SCREEN_BLOCK_SIZE EQU 0800
SECOND_SCREEN_BLOCK EQU 4800
CHAR_ADR	EQU 3C00
ENTRY_POINT	EQU 8000
Defining MACRO copy16bytes
Params: source_address, destination_address
		ORG 8000
8000:		label start
8000:CDDA80	CALL 80DA
8003:F3		DI
		REPT 8
Expanding MACRO copy16bytes
source_address= SCREEN_ADR + 0020 * ( cnt * 0008 + 0009 ) 
destination_address= SECOND_SCREEN_BLOCK + ( 0020 * 0008 * cnt ) 
LD SP , source_address 
8004:312041	LD SP, 4120
POP AF 
8007:F1		POP AF
POP BC 
8008:C1		POP BC
POP DE 
8009:D1		POP DE
POP HL 
800A:E1		POP HL
EXX 
800B:D9		EXX
EX AF , AF' 
800C:08		EX AF, AF'
POP AF 
800D:F1		POP AF
POP BC 
800E:C1		POP BC
POP DE 
800F:D1		POP DE
POP HL 
8010:E1		POP HL
LD SP , destination_address + 0010 
8011:311048	LD SP, 4810
PUSH HL 
8014:E5		PUSH HL
PUSH DE 
8015:D5		PUSH DE
PUSH BC 
8016:C5		PUSH BC
PUSH AF 
8017:F5		PUSH AF
EXX 
8018:D9		EXX
EX AF , AF' 
8019:08		EX AF, AF'
PUSH HL 
801A:E5		PUSH HL
PUSH DE 
801B:D5		PUSH DE
PUSH BC 
801C:C5		PUSH BC
PUSH AF 
801D:F5		PUSH AF
ENDM 
		ENDM
End of MACRO copy16bytes
Expanding MACRO copy16bytes
source_address= SCREEN_ADR + 0020 * ( cnt * 0008 + 0009 ) 
destination_address= SECOND_SCREEN_BLOCK + ( 0020 * 0008 * cnt ) 
LD SP , source_address 
801E:312042	LD SP, 4220
POP AF 
8021:F1		POP AF
POP BC 
8022:C1		POP BC
POP DE 
8023:D1		POP DE
POP HL 
8024:E1		POP HL
EXX 
8025:D9		EXX
EX AF , AF' 
8026:08		EX AF, AF'
POP AF 
8027:F1		POP AF
POP BC 
8028:C1		POP BC
POP DE 
8029:D1		POP DE
POP HL 
802A:E1		POP HL
LD SP , destination_address + 0010 
802B:311049	LD SP, 4910
PUSH HL 
802E:E5		PUSH HL
PUSH DE 
802F:D5		PUSH DE
PUSH BC 
8030:C5		PUSH BC
PUSH AF 
8031:F5		PUSH AF
EXX 
8032:D9		EXX
EX AF , AF' 
8033:08		EX AF, AF'
PUSH HL 
8034:E5		PUSH HL
PUSH DE 
8035:D5		PUSH DE
PUSH BC 
8036:C5		PUSH BC
PUSH AF 
8037:F5		PUSH AF
ENDM 
		ENDM
End of MACRO copy16bytes
Expanding MACRO copy16bytes
source_address= SCREEN_ADR + 0020 * ( cnt * 0008 + 0009 ) 
destination_address= SECOND_SCREEN_BLOCK + ( 0020 * 0008 * cnt ) 
LD SP , source_address 
8038:312043	LD SP, 4320
POP AF 
803B:F1		POP AF
POP BC 
803C:C1		POP BC
POP DE 
803D:D1		POP DE
POP HL 
803E:E1		POP HL
EXX 
803F:D9		EXX
EX AF , AF' 
8040:08		EX AF, AF'
POP AF 
8041:F1		POP AF
POP BC 
8042:C1		POP BC
POP DE 
8043:D1		POP DE
POP HL 
8044:E1		POP HL
LD SP , destination_address + 0010 
8045:31104A	LD SP, 4A10
PUSH HL 
8048:E5		PUSH HL
PUSH DE 
8049:D5		PUSH DE
PUSH BC 
804A:C5		PUSH BC
PUSH AF 
804B:F5		PUSH AF
EXX 
804C:D9		EXX
EX AF , AF' 
804D:08		EX AF, AF'
PUSH HL 
804E:E5		PUSH HL
PUSH DE 
804F:D5		PUSH DE
PUSH BC 
8050:C5		PUSH BC
PUSH AF 
8051:F5		PUSH AF
ENDM 
		ENDM
End of MACRO copy16bytes
Expanding MACRO copy16bytes
source_address= SCREEN_ADR + 0020 * ( cnt * 0008 + 0009 ) 
destination_address= SECOND_SCREEN_BLOCK + ( 0020 * 0008 * cnt ) 
LD SP , source_address 
8052:312044	LD SP, 4420
POP AF 
8055:F1		POP AF
POP BC 
8056:C1		POP BC
POP DE 
8057:D1		POP DE
POP HL 
8058:E1		POP HL
EXX 
8059:D9		EXX
EX AF , AF' 
805A:08		EX AF, AF'
POP AF 
805B:F1		POP AF
POP BC 
805C:C1		POP BC
POP DE 
805D:D1		POP DE
POP HL 
805E:E1		POP HL
LD SP , destination_address + 0010 
805F:31104B	LD SP, 4B10
PUSH HL 
8062:E5		PUSH HL
PUSH DE 
8063:D5		PUSH DE
PUSH BC 
8064:C5		PUSH BC
PUSH AF 
8065:F5		PUSH AF
EXX 
8066:D9		EXX
EX AF , AF' 
8067:08		EX AF, AF'
PUSH HL 
8068:E5		PUSH HL
PUSH DE 
8069:D5		PUSH DE
PUSH BC 
806A:C5		PUSH BC
PUSH AF 
806B:F5		PUSH AF
ENDM 
		ENDM
End of MACRO copy16bytes
Expanding MACRO copy16bytes
source_address= SCREEN_ADR + 0020 * ( cnt * 0008 + 0009 ) 
destination_address= SECOND_SCREEN_BLOCK + ( 0020 * 0008 * cnt ) 
LD SP , source_address 
806C:312045	LD SP, 4520
POP AF 
806F:F1		POP AF
POP BC 
8070:C1		POP BC
POP DE 
8071:D1		POP DE
POP HL 
8072:E1		POP HL
EXX 
8073:D9		EXX
EX AF , AF' 
8074:08		EX AF, AF'
POP AF 
8075:F1		POP AF
POP BC 
8076:C1		POP BC
POP DE 
8077:D1		POP DE
POP HL 
8078:E1		POP HL
LD SP , destination_address + 0010 
8079:31104C	LD SP, 4C10
PUSH HL 
807C:E5		PUSH HL
PUSH DE 
807D:D5		PUSH DE
PUSH BC 
807E:C5		PUSH BC
PUSH AF 
807F:F5		PUSH AF
EXX 
8080:D9		EXX
EX AF , AF' 
8081:08		EX AF, AF'
PUSH HL 
8082:E5		PUSH HL
PUSH DE 
8083:D5		PUSH DE
PUSH BC 
8084:C5		PUSH BC
PUSH AF 
8085:F5		PUSH AF
ENDM 
		ENDM
End of MACRO copy16bytes
Expanding MACRO copy16bytes
source_address= SCREEN_ADR + 0020 * ( cnt * 0008 + 0009 ) 
destination_address= SECOND_SCREEN_BLOCK + ( 0020 * 0008 * cnt ) 
LD SP , source_address 
8086:312046	LD SP, 4620
POP AF 
8089:F1		POP AF
POP BC 
808A:C1		POP BC
POP DE 
808B:D1		POP DE
POP HL 
808C:E1		POP HL
EXX 
808D:D9		EXX
EX AF , AF' 
808E:08		EX AF, AF'
POP AF 
808F:F1		POP AF
POP BC 
8090:C1		POP BC
POP DE 
8091:D1		POP DE
POP HL 
8092:E1		POP HL
LD SP , destination_address + 0010 
8093:31104D	LD SP, 4D10
PUSH HL 
8096:E5		PUSH HL
PUSH DE 
8097:D5		PUSH DE
PUSH BC 
8098:C5		PUSH BC
PUSH AF 
8099:F5		PUSH AF
EXX 
809A:D9		EXX
EX AF , AF' 
809B:08		EX AF, AF'
PUSH HL 
809C:E5		PUSH HL
PUSH DE 
809D:D5		PUSH DE
PUSH BC 
809E:C5		PUSH BC
PUSH AF 
809F:F5		PUSH AF
ENDM 
		ENDM
End of MACRO copy16bytes
Expanding MACRO copy16bytes
source_address= SCREEN_ADR + 0020 * ( cnt * 0008 + 0009 ) 
destination_address= SECOND_SCREEN_BLOCK + ( 0020 * 0008 * cnt ) 
LD SP , source_address 
80A0:312047	LD SP, 4720
POP AF 
80A3:F1		POP AF
POP BC 
80A4:C1		POP BC
POP DE 
80A5:D1		POP DE
POP HL 
80A6:E1		POP HL
EXX 
80A7:D9		EXX
EX AF , AF' 
80A8:08		EX AF, AF'
POP AF 
80A9:F1		POP AF
POP BC 
80AA:C1		POP BC
POP DE 
80AB:D1		POP DE
POP HL 
80AC:E1		POP HL
LD SP , destination_address + 0010 
80AD:31104E	LD SP, 4E10
PUSH HL 
80B0:E5		PUSH HL
PUSH DE 
80B1:D5		PUSH DE
PUSH BC 
80B2:C5		PUSH BC
PUSH AF 
80B3:F5		PUSH AF
EXX 
80B4:D9		EXX
EX AF , AF' 
80B5:08		EX AF, AF'
PUSH HL 
80B6:E5		PUSH HL
PUSH DE 
80B7:D5		PUSH DE
PUSH BC 
80B8:C5		PUSH BC
PUSH AF 
80B9:F5		PUSH AF
ENDM 
		ENDM
End of MACRO copy16bytes
Expanding MACRO copy16bytes
source_address= SCREEN_ADR + 0020 * ( cnt * 0008 + 0009 ) 
destination_address= SECOND_SCREEN_BLOCK + ( 0020 * 0008 * cnt ) 
LD SP , source_address 
80BA:312048	LD SP, 4820
POP AF 
80BD:F1		POP AF
POP BC 
80BE:C1		POP BC
POP DE 
80BF:D1		POP DE
POP HL 
80C0:E1		POP HL
EXX 
80C1:D9		EXX
EX AF , AF' 
80C2:08		EX AF, AF'
POP AF 
80C3:F1		POP AF
POP BC 
80C4:C1		POP BC
POP DE 
80C5:D1		POP DE
POP HL 
80C6:E1		POP HL
LD SP , destination_address + 0010 
80C7:31104F	LD SP, 4F10
PUSH HL 
80CA:E5		PUSH HL
PUSH DE 
80CB:D5		PUSH DE
PUSH BC 
80CC:C5		PUSH BC
PUSH AF 
80CD:F5		PUSH AF
EXX 
80CE:D9		EXX
EX AF , AF' 
80CF:08		EX AF, AF'
PUSH HL 
80D0:E5		PUSH HL
PUSH DE 
80D1:D5		PUSH DE
PUSH BC 
80D2:C5		PUSH BC
PUSH AF 
80D3:F5		PUSH AF
ENDM 
		ENDM
End of MACRO copy16bytes
		ENDM
80D4:310090	LD SP, 9000
80D7:FB		EI
80D8:		label finito
80D8:18FE	JR 80D8
80DA:		label fill_in_screen
80DA:110040	LD DE, 4000
80DD:CDE180	CALL 80E1
80E0:C9		RET
80E1:		label draw_ascii_table
80E1:3E20	LD A, 20
80E3:		label next_char
80E3:F5		PUSH AF
80E4:CDF380	CALL 80F3
80E7:3E20	LD A, 20
80E9:CDF380	CALL 80F3
80EC:F1		POP AF
80ED:3C		INC A
80EE:FE80	CP 80
80F0:20F1	JR NZ, 80E3
80F2:C9		RET
80F3:		label draw_char
80F3:01003C	LD BC, 3C00
80F6:61		LD H, C
80F7:6F		LD L, A
80F8:29		ADD HL, HL
80F9:29		ADD HL, HL
80FA:29		ADD HL, HL
80FB:09		ADD HL, BC
80FC:0608	LD B, 08
80FE:4A		LD C, D
80FF:		label loop
80FF:7E		LD A, (HL)
8100:12		LD (DE), A
8101:2C		INC L
8102:14		INC D
8103:10FA	DJNZ 80FF
8105:1C		INC E
8106:C8		RET Z
8107:51		LD D, C
8108:C9		RET
8109:		END 8000
Emiting TAP basic loader
Emiting TAP from 8000 to 8108
